// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetChan.Entities;

namespace NetChan.Migrations
{
    [DbContext(typeof(NetchanDbContext))]
    partial class NetchanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("NetChan.Entities.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ext");

                    b.Property<Guid?>("PostId");

                    b.Property<Guid?>("ThreadId");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("ThreadId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("NetChan.Entities.Board", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsSfw");

                    b.Property<string>("ShortName");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("NetChan.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid?>("ThreadId");

                    b.Property<string>("Title");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ThreadId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("NetChan.Entities.Thread", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BoardId");

                    b.Property<DateTime>("BumpDate");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Title");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("NetChan.Entities.Attachment", b =>
                {
                    b.HasOne("NetChan.Entities.Post")
                        .WithMany("Attachments")
                        .HasForeignKey("PostId");

                    b.HasOne("NetChan.Entities.Thread")
                        .WithMany("Attachments")
                        .HasForeignKey("ThreadId");
                });

            modelBuilder.Entity("NetChan.Entities.Post", b =>
                {
                    b.HasOne("NetChan.Entities.Thread", "Thread")
                        .WithMany()
                        .HasForeignKey("ThreadId");
                });

            modelBuilder.Entity("NetChan.Entities.Thread", b =>
                {
                    b.HasOne("NetChan.Entities.Board", "Board")
                        .WithMany()
                        .HasForeignKey("BoardId");
                });
#pragma warning restore 612, 618
        }
    }
}
